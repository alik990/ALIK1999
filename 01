                                                              

                                                                                               What is Git?

 1) Git-ը DevOps գործիք է, որն օգտագործվում է կոդերի կառավարման համար: Դա անվճար և բաց կոդով տարբերակների վերահսկման համակարգ է, որն օգտագործվում է փոքրից շատ մեծ նախագծերը արդյունավետորեն մշակելու համար:
 Git-ն օգտագործվում է սկզբնաղբյուրի փոփոխություններին հետևելու համար՝ հնարավորություն տալով բազմաթիվ մշակողների միասին աշխատել ոչ գծային զարգացման վրա: Լինուս Տորվալդսը ստեղծեց Git-ը 2005 թվականին Linux
 միջուկի զարգացման համար: Փոխակերպեք ձեր DevOps-ի կարիերան և սովորեք գործառնական և զարգացման գործունեությունը բարելավելու գիտությունը՝ ընտրելով մեր PGP-ն DevOps-ում: Կապվեք մեր ընդունելության խորհրդատուի
 հետ այսօր և գրավեք ձեր տեղը: Նախքան խորը սուզվելը, եկեք բացատրենք Git-ից առաջ մի սցենար. ծրագրավորողները օգտագործում էին իրենց ծածկագրերը կենտրոնական սերվերին առանց իրենց սեփական պատճենները ունենալու. 
Աղբյուրի կոդում կատարված ցանկացած փոփոխություն անհայտ էր մյուս ծրագրավորողների համար: Մշակողներից որևէ մեկի միջև հաղորդակցություն չկար:

                                                                                              Features of Git.

2) Git-ը մեր օրերում Տարբերակների կառավարման ամենահայտնի համակարգն է, քանի որ այն բաց կոդով ծրագրաշար է, որը հեշտ է կարգավորել և կատարել տարբեր նախագծերի վրա աշխատանք:
 Git-ը թույլ է տալիս մարդկանց թիմին աշխատել միասին՝ բոլորն օգտագործելով նույն ֆայլերը: Եվ դա օգնում է թիմին հաղթահարել այն շփոթությունը, որը սովորաբար տեղի է ունենում, երբ մի քանի մարդիկ խմբագրում են նույն
 ֆայլերը: Git-ը յուրաքանչյուր ծրագրավորողին տրամադրում է զարգացման ողջ պատմության տեղական պատճենը, և փոփոխությունները պատճենվում են մեկ այդպիսի պահոցից մյուսը:

                                                                                                Git Workflow

3) Կենտրոնացված Git-ի աշխատանքային հոսքը թիմի բոլոր անդամներին հնարավորություն է տալիս ուղղակիորեն փոփոխություններ կատարել հիմնական մասնաճյուղում (երբեմն կոչվում է հիմնական մասնաճյուղ կամ լռելյայն մասնաճյուղ),
 երբ յուրաքանչյուր փոփոխություն գրանցվում է գործող պատմության մեջ: Կենտրոնացված աշխատանքային հոսքը ներառում է յուրաքանչյուր մասնակցի պարտավորություն հիմնական մասնաճյուղին առանց որևէ այլ մասնաճյուղ օգտագործել
ու:Այս ռազմավարությունը լավ է աշխատում փոքր թիմերի համար, քանի որ թիմի անդամները կարող են շփվել այնպես, որ մի քանի ծրագրավորողներ միաժամանակ չներդնեն կոդի նույն կտորը: Կենտրոնացված աշխատանքային հոսքը կարող է
 անխափան լինել, եթե թիմի անդամները լավ են շփվում, բայց կան սահմանափակումներ: Եթե մի քանի ծրագրավորողներ պարտավորվում են կատարել նույն ճյուղը, դժվար է գտնել կայուն պահ՝ փոփոխություններն ազատելու համար: 
Հետևաբար, մշակողները պետք է անկայուն փոփոխությունները պահեն տեղական, մինչև պատրաստ լինեն թողարկմանը:

                                                                                                Branch in Git.

4) Ճյուղը» անծանոթ բառ չէ։ Չափազանց սովորական է լսել այնպիսի բառեր, ինչպիսիք են ծառի ճյուղ, բանկի մասնաճյուղ, գիտության մասնաճյուղ և այլն: Մենք դրանք բավականին հաճախ ենք օգտագործում մեր կյանքում:
 Այսօր ձեր արդեն գոյություն ունեցող բառապաշարում «ճյուղեր» բառի հետ մեկ այլ նշանակություն կկապեք։ Այս նոր տեսակի մասնաճյուղը Git Branch-ն է: Մշակողների համայնքը հաճախ օգտագործում է արտահայտություններ,
 ինչպիսիք են «մարդասպանի հատկանիշը» Git-ում մասնաճյուղի հայեցակարգի համար առցանց համայնքներում, ինչպիսիք են StackExchange-ը և StackOverflow-ը, որն արտացոլում է Git Branch-ի կարևորությունը: 
Այս ձեռնարկում մենք կանդրադառնանք Git-ի մասնաճյուղերի վերաբերյալ հետևյալ թեմաներին.



